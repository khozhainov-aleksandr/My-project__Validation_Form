{"version":3,"sources":["scripts/main.js"],"names":["CONFIRM_MESSAGE","TITLE_MESSAGE_USER_NAME","TITLE_MESSAGE_EMAIL","TITLE_MESSAGE_PASSWORD","TITLE_MESSAGE_CONFIRM_PASSWORD","formEl","document","querySelector","userNameInputEl","emailInputEl","passwordInputEl","passwordConfirmInputEl","onClickSubmitForm","event","preventDefault","checkEmptyInput","checkEmailInput","checkLengthInput","checkPasswordMerge","inputArray","messageArray","messageConfirm","forEach","inputElement","index","value","trim","showError","showSuccess","input","min","max","messageTitle","length","test","mainPassword","secondPassword","message","formControl","parentElement","smallElement","classList","remove","add","textContent","addEventListener"],"mappings":";AAAA,aAGA,IAAMA,EAAkB,YAClBC,EAA0B,YAC1BC,EAAsB,QACtBC,EAAyB,WACzBC,EAAiC,mBAEjCC,EAASC,SAASC,cAAc,SAChCC,EAAkBF,SAASC,cAAc,aACzCE,EAAeH,SAASC,cAAc,UACtCG,EAAkBJ,SAASC,cAAc,aACzCI,EAAyBL,SAASC,cAAc,qBAItD,SAASK,EAAkBC,GACzBA,EAAMC,iBAENC,EACE,CAACP,EAAiBC,EAAcC,EAAiBC,GACjD,CAACV,EAAyBC,EAAqBC,EAAwBC,GACvEJ,GACFgB,EAAgBP,EAAcP,EAAqBF,GACnDiB,EAAiBT,EAAiB,EAAG,GAAIP,EAAyBD,GAClEiB,EAAiBP,EAAiB,EAAG,GAAIP,EAAwBH,GACjEkB,EAAmBR,EAAiBC,EAAwBP,GAG9D,SAASW,EAAgBI,EAAYC,EAAcC,GACjDF,EAAWG,QAAQ,SAACC,EAAcC,GACE,KAA9BD,EAAaE,MAAMC,OACrBC,EAAUJ,EAAiBH,GAAAA,OAAAA,EAAaI,GAAxC,mBAEAI,EAAYL,EAAiBH,GAAAA,OAAAA,EAAaI,GAAUH,KAAAA,OAAAA,MAK1D,SAASJ,EAAiBY,EAAOC,EAAKC,EAAKC,EAAcX,GACnDQ,EAAMJ,MAAMQ,OAASH,EACvBH,EAAUE,EAAUG,GAAAA,OAAAA,EAAmCF,wBAAAA,OAAAA,EAAvD,iBACSD,EAAMJ,MAAMQ,OAASF,EAC9BJ,EAAUE,EAAUG,GAAAA,OAAAA,EAAmCD,wBAAAA,OAAAA,EAAvD,iBAEAH,EAAYC,EAAUG,GAAAA,OAAAA,EAAgBX,KAAAA,OAAAA,IAI1C,SAASL,EAAgBa,EAAOG,EAAcX,GAC5B,0JAEJa,KAAKL,EAAMJ,MAAMC,QAC3BE,EAAYC,EAAUG,GAAAA,OAAAA,EAAgBX,KAAAA,OAAAA,IAEtCM,EAAUE,EAAUG,GAAAA,OAAAA,EAApB,oBAIJ,SAASd,EAAmBiB,EAAcC,EAAgBJ,GACpDG,EAAaV,QAAUW,EAAeX,OACxCE,EAAUS,EAAmBJ,GAAAA,OAAAA,EAA7B,oBAIJ,SAASL,EAAUE,EAAOQ,GAClBC,IAAAA,EAAcT,EAAMU,cACpBC,EAAeF,EAAY/B,cAAc,SAE/C+B,EAAYG,UAAUC,OAAO,WAC7BJ,EAAYG,UAAUE,IAAI,SAC1BH,EAAaI,YAAcP,EAG7B,SAAST,EAAYC,EAAOQ,GACpBC,IAAAA,EAAcT,EAAMU,cACpBC,EAAeF,EAAY/B,cAAc,SAE/C+B,EAAYG,UAAUC,OAAO,SAC7BJ,EAAYG,UAAUE,IAAI,WAC1BH,EAAaI,YAAcP,EAlE7BhC,EAAOwC,iBAAiB,SAAUjC","file":"main.61cc292c.js","sourceRoot":"../src","sourcesContent":["'use strict';\n/* eslint-disable */\n\nconst CONFIRM_MESSAGE = 'Confirm !';\nconst TITLE_MESSAGE_USER_NAME = 'User Name';\nconst TITLE_MESSAGE_EMAIL = 'Email';\nconst TITLE_MESSAGE_PASSWORD = 'Password';\nconst TITLE_MESSAGE_CONFIRM_PASSWORD = 'Confirm Password';\n\nconst formEl = document.querySelector('#form');\nconst userNameInputEl = document.querySelector('#username');\nconst emailInputEl = document.querySelector('#email');\nconst passwordInputEl = document.querySelector('#password');\nconst passwordConfirmInputEl = document.querySelector('#password-confirm');\n\nformEl.addEventListener('submit', onClickSubmitForm);\n\nfunction onClickSubmitForm(event) {\n  event.preventDefault();\n\n  checkEmptyInput(\n    [userNameInputEl, emailInputEl, passwordInputEl, passwordConfirmInputEl],\n    [TITLE_MESSAGE_USER_NAME, TITLE_MESSAGE_EMAIL, TITLE_MESSAGE_PASSWORD, TITLE_MESSAGE_CONFIRM_PASSWORD],\n    CONFIRM_MESSAGE);\n  checkEmailInput(emailInputEl, TITLE_MESSAGE_EMAIL, CONFIRM_MESSAGE);\n  checkLengthInput(userNameInputEl, 3, 15, TITLE_MESSAGE_USER_NAME, CONFIRM_MESSAGE);\n  checkLengthInput(passwordInputEl, 6, 20, TITLE_MESSAGE_PASSWORD, CONFIRM_MESSAGE);\n  checkPasswordMerge(passwordInputEl, passwordConfirmInputEl, TITLE_MESSAGE_CONFIRM_PASSWORD);\n}\n\nfunction checkEmptyInput(inputArray, messageArray, messageConfirm) {\n  inputArray.forEach((inputElement, index) => {\n    if (inputElement.value.trim() === '') {\n      showError(inputElement, `${messageArray[index]} is Required !`);\n    } else {\n      showSuccess(inputElement, `${messageArray[index]} ${messageConfirm}`);\n    }\n  });\n}\n\nfunction checkLengthInput(input, min, max, messageTitle, messageConfirm) {\n  if (input.value.length < min) {\n    showError(input, `${messageTitle} length must be Min ${min} characters.`);\n  } else if (input.value.length > max) {\n    showError(input, `${messageTitle} length must be Max ${max} characters.`);\n  } else {\n    showSuccess(input, `${messageTitle} ${messageConfirm}`);\n  }\n}\n\nfunction checkEmailInput(input, messageTitle, messageConfirm) {\n  const regular = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (regular.test(input.value.trim())) {\n    showSuccess(input, `${messageTitle} ${messageConfirm}`);\n  } else {\n    showError(input, `${messageTitle} is not valid !`);\n  }\n}\n\nfunction checkPasswordMerge(mainPassword, secondPassword, messageTitle) {\n  if (mainPassword.value !== secondPassword.value) {\n    showError(secondPassword, `${messageTitle} do not Merge !`);\n  }\n}\n\nfunction showError(input, message) {\n  const formControl = input.parentElement;\n  const smallElement = formControl.querySelector('small');\n\n  formControl.classList.remove('success');\n  formControl.classList.add('error');\n  smallElement.textContent = message;\n}\n\nfunction showSuccess(input, message) {\n  const formControl = input.parentElement;\n  const smallElement = formControl.querySelector('small');\n\n  formControl.classList.remove('error');\n  formControl.classList.add('success');\n  smallElement.textContent = message;\n}\n"]}